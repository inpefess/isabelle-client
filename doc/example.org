#+BEGIN_COMMENT
Copyright 2021-2025 Boris Shminke

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
#+END_COMMENT
* Basic usage example.
** In what case to use
This client might be useful if:

- you have a machine with Isabelle installed
- you have scripts for automatic generation of theory files in Python
- you want to communicate with the server not using [[https://scala-lang.org/][Scala]] and/or
  [[https://polyml.org/][Standard ML]]
** In what environment to use
The client works well in scripts and in Jupyter notebooks. For the
latter, one has to enable nested event loops first. Please refer to
~nest_asyncio~ [[https://pypi.org/project/nest-asyncio/][documentation]].
** Starting Isabelle server
First, we need to start an Isabelle server
#+begin_src python
  from isabelle_client import start_isabelle_server

  server_info, _ = start_isabelle_server(
      name="test", port=9999, log_file="server.log"
  )
#+end_src

#+RESULTS:

When using ~start_isabelle_server~ utility function in Python REPL or
terminal IPython, shutting the server down within the same session is
known to cause a runtime error on exit from the session. This
behaviour is related to a [[https://ipython.readthedocs.io/en/stable/interactive/autoawait.html#difference-between-terminal-ipython-and-ipykernel][well known issue]].

We could also start the server outside this script and use its info (on Windows, this is done in Cygwin)
#+begin_example
  isabelle server
#+end_example
** Interacting with Isabelle server
Let's create a client to our server
#+begin_src python
  from isabelle_client import get_isabelle_client

  isabelle = get_isabelle_client(server_info)
#+end_src

#+RESULTS:

We will log all the messages from the server to a file
#+begin_src python
  import logging

  isabelle.logger = logging.getLogger()
  isabelle.logger.setLevel(logging.INFO)
  isabelle.logger.addHandler(logging.FileHandler("session.log"))
#+end_src

#+RESULTS:

Isabelle client supports all the commands implemented in Isabelle server
#+begin_src python
  from pprint import pprint

  pprint(isabelle.help())
#+end_src

#+RESULTS:
: [IsabelleResponse(response_type='OK',
:                   response_body='{"isabelle_id":"4b875a4c83b0","isabelle_name":"Isabelle2025"}',
:                   response_length=None),
:  IsabelleResponse(response_type='OK',
:                   response_body='["cancel","echo","help","purge_theories","session_build","session_start","session_stop","shutdown","use_theories"]',
:                   response_length=118)]

Let's suppose we have a ~Example.thy~ theory file in our working directory which we, e.g. generated with another Python script

#+INCLUDE: "../examples/Example.thy" example

We can send this theory file to the server and get a response
#+begin_src python
  pprint(isabelle.use_theories(
      theories=["Example"],
      master_dir="../examples"
  ))
#+end_src

#+RESULTS:
#+begin_example
[IsabelleResponse(response_type='OK',
                  response_body='{"isabelle_id":"4b875a4c83b0","isabelle_name":"Isabelle2025"}',
                  response_length=None),
 IsabelleResponse(response_type='OK',
                  response_body='{"task":"0bd99ea2-5b5f-4bcc-9d60-bb954e081557"}',
                  response_length=None),
 IsabelleResponse(response_type='NOTE',
                  response_body='{"percentage":42,"task":"0bd99ea2-5b5f-4bcc-9d60-bb954e081557","message":"theory '
                                'Draft.Example '
                                '42%","kind":"writeln","session":"","theory":"Draft.Example"}',
                  response_length=161),
 IsabelleResponse(response_type='NOTE',
                  response_body='{"percentage":99,"task":"0bd99ea2-5b5f-4bcc-9d60-bb954e081557","message":"theory '
                                'Draft.Example '
                                '99%","kind":"writeln","session":"","theory":"Draft.Example"}',
                  response_length=161),
 IsabelleResponse(response_type='NOTE',
                  response_body='{"percentage":100,"task":"0bd99ea2-5b5f-4bcc-9d60-bb954e081557","message":"theory '
                                'Draft.Example '
                                '100%","kind":"writeln","session":"","theory":"Draft.Example"}',
                  response_length=163),
 IsabelleResponse(response_type='FINISHED',
                  response_body='{"ok":true,"errors":[],"nodes":[{"messages":[{"kind":"writeln","message":"theorem '
                                '\\\\<forall>x. \\\\<exists>y. x = '
                                'y","pos":{"line":5,"offset":59,"end_offset":61,"file":"../examples/Example.thy"}}],"exports":[],"status":{"percentage":100,"unprocessed":0,"running":0,"finished":7,"failed":0,"total":7,"consolidated":true,"canceled":false,"ok":true,"warned":0},"theory_name":"Draft.Example","node_name":"../examples/Example.thy"}],"task":"0bd99ea2-5b5f-4bcc-9d60-bb954e081557"}',
                  response_length=482)]
#+end_example

or we can build a session document using ~./ROOT~ file

#+INCLUDE: "../examples/ROOT" example

and ~./document/root.tex~ file

#+INCLUDE: "../examples/document/root.tex" src tex

#+begin_src python
  import json

  pprint(
      json.loads(
          isabelle.session_build(
              dirs=["../examples/"], session="examples"
          )[-1].response_body
      )
  )
#+end_src

#+RESULTS:
#+begin_example
{'ok': True,
 'return_code': 0,
 'sessions': [{'ok': True,
               'return_code': 0,
               'session': 'Pure',
               'timeout': False,
               'timing': {'cpu': 0, 'elapsed': 0, 'gc': 0}},
              {'ok': True,
               'return_code': 0,
               'session': 'HOL',
               'timeout': False,
               'timing': {'cpu': 0, 'elapsed': 0, 'gc': 0}},
              {'ok': True,
               'return_code': 0,
               'session': 'examples',
               'timeout': False,
               'timing': {'cpu': 0, 'elapsed': 0, 'gc': 0}}],
 'task': 'f1f0064c-0251-48aa-a1df-bb53d98376ab'}
#+end_example

One can also issue a free-form command, e.g.
#+begin_src python
  import asyncio

  pprint(asyncio.run(isabelle.execute_command("echo 42", asynchronous=False)))
#+end_src

#+RESULTS:
: [IsabelleResponse(response_type='OK',
:                   response_body='{"isabelle_id":"4b875a4c83b0","isabelle_name":"Isabelle2025"}',
:                   response_length=None),
:  IsabelleResponse(response_type='OK', response_body='42', response_length=None)]

Finally, we can shut the server down.
#+begin_src python
  pprint(isabelle.shutdown())
#+end_src

#+RESULTS:
: [IsabelleResponse(response_type='OK',
:                   response_body='{"isabelle_id":"4b875a4c83b0","isabelle_name":"Isabelle2025"}',
:                   response_length=None),
:  IsabelleResponse(response_type='OK', response_body='', response_length=None)]
