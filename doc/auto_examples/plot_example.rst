
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_example.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_example.py:


Basic usage example.
====================

.. GENERATED FROM PYTHON SOURCE LINES 21-31

In what case to use
-------------------

This client might be useful if:

* you have a machine with Isabelle installed
* you have scripts for automatic generation of theory files in Python
* you want to communicate with the server not using
  `Scala <https://scala-lang.org/>`__ and/or
  `Standard ML <https://polyml.org/>`__

.. GENERATED FROM PYTHON SOURCE LINES 33-40

In what environment to use
--------------------------

The client works well in scripts and in Jupyter notebooks. For the
latter, one has to enable nested event loops first. Please refer to
``nest_asyncio`` `documentation
<https://pypi.org/project/nest-asyncio/>`__.

.. GENERATED FROM PYTHON SOURCE LINES 42-45

Starting Isabelle server
------------------------
First, we need to start an Isabelle server

.. GENERATED FROM PYTHON SOURCE LINES 45-52

.. code-block:: Python


    from isabelle_client import start_isabelle_server

    server_info, _ = start_isabelle_server(
        name="test", port=9999, log_file="server.log"
    )








.. GENERATED FROM PYTHON SOURCE LINES 53-60

.. warning::
  When using `start_isabelle_server
  <package-documentation.html#isabelle_client.utils.start_isabelle_server>`__
  utility function in Python REPL or terminal IPython, shutting the server
  down within the same session is known to cause a runtime error on exit from
  the session. This behaviour is related to a `well known issue
  <https://ipython.readthedocs.io/en/stable/interactive/autoawait.html#difference-between-terminal-ipython-and-ipykernel>`__.

.. GENERATED FROM PYTHON SOURCE LINES 62-66

We could also start the server outside this script and use its info (on
Windows, this is done in Cygwin)::

   isabelle server

.. GENERATED FROM PYTHON SOURCE LINES 68-71

Interacting with Isabelle server
--------------------------------
Let's create a client to our server

.. GENERATED FROM PYTHON SOURCE LINES 71-76

.. code-block:: Python


    from isabelle_client import get_isabelle_client

    isabelle = get_isabelle_client(server_info)








.. GENERATED FROM PYTHON SOURCE LINES 77-78

We will log all the messages from the server to a file

.. GENERATED FROM PYTHON SOURCE LINES 78-85

.. code-block:: Python


    import logging

    isabelle.logger = logging.getLogger()
    isabelle.logger.setLevel(logging.INFO)
    isabelle.logger.addHandler(logging.FileHandler("session.log"))








.. GENERATED FROM PYTHON SOURCE LINES 86-87

Isabelle client supports all the commands implemented in Isabelle server

.. GENERATED FROM PYTHON SOURCE LINES 87-92

.. code-block:: Python


    from pprint import pprint

    pprint(isabelle.help())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [IsabelleResponse(response_type='OK',
                      response_body='{"isabelle_id":"29f2b8ff84f3","isabelle_name":"Isabelle2024"}',
                      response_length=None),
     IsabelleResponse(response_type='OK',
                      response_body='["cancel","echo","help","purge_theories","session_build","session_start","session_stop","shutdown","use_theories"]',
                      response_length=118)]




.. GENERATED FROM PYTHON SOURCE LINES 93-98

Let's suppose we have a ``Example.thy`` theory file in our working directory
which we, e.g. generated with another Python script

.. literalinclude:: ../../examples/Example.thy


.. GENERATED FROM PYTHON SOURCE LINES 100-101

We can send this theory file to the server and get a response

.. GENERATED FROM PYTHON SOURCE LINES 101-104

.. code-block:: Python


    pprint(isabelle.use_theories(theories=["Example"], master_dir="."))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [IsabelleResponse(response_type='OK',
                      response_body='{"isabelle_id":"29f2b8ff84f3","isabelle_name":"Isabelle2024"}',
                      response_length=None),
     IsabelleResponse(response_type='OK',
                      response_body='{"task":"93ecddd5-d6b5-4e4e-9ac4-28902a27abe7"}',
                      response_length=None),
     IsabelleResponse(response_type='NOTE',
                      response_body='{"percentage":99,"task":"93ecddd5-d6b5-4e4e-9ac4-28902a27abe7","message":"theory '
                                    'Draft.Example '
                                    '99%","kind":"writeln","session":"","theory":"Draft.Example"}',
                      response_length=161),
     IsabelleResponse(response_type='NOTE',
                      response_body='{"percentage":100,"task":"93ecddd5-d6b5-4e4e-9ac4-28902a27abe7","message":"theory '
                                    'Draft.Example '
                                    '100%","kind":"writeln","session":"","theory":"Draft.Example"}',
                      response_length=163),
     IsabelleResponse(response_type='FINISHED',
                      response_body='{"ok":true,"errors":[],"nodes":[{"messages":[{"kind":"writeln","message":"theorem '
                                    '\\\\<forall>x. \\\\<exists>y. x = '
                                    'y","pos":{"line":5,"offset":59,"end_offset":61,"file":"Example.thy"}}],"exports":[],"status":{"percentage":100,"unprocessed":0,"running":0,"finished":7,"failed":0,"total":7,"consolidated":true,"canceled":false,"ok":true,"warned":0},"theory_name":"Draft.Example","node_name":"Example.thy"}],"task":"93ecddd5-d6b5-4e4e-9ac4-28902a27abe7"}',
                      response_length=458)]




.. GENERATED FROM PYTHON SOURCE LINES 105-114

or we can build a session document using ``./ROOT`` file

.. literalinclude:: ../../examples/ROOT

and ``./document/root.tex`` file

.. literalinclude:: ../../examples/document/root.tex
   :language: tex


.. GENERATED FROM PYTHON SOURCE LINES 114-125

.. code-block:: Python


    import json

    pprint(
        json.loads(
            isabelle.session_build(dirs=["."], session="examples")[
                -1
            ].response_body
        )
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    {'ok': True,
     'return_code': 0,
     'sessions': [{'ok': True,
                   'return_code': 0,
                   'session': 'Pure',
                   'timeout': False,
                   'timing': {'cpu': 0, 'elapsed': 0, 'gc': 0}},
                  {'ok': True,
                   'return_code': 0,
                   'session': 'HOL',
                   'timeout': False,
                   'timing': {'cpu': 0, 'elapsed': 0, 'gc': 0}},
                  {'ok': True,
                   'return_code': 0,
                   'session': 'examples',
                   'timeout': False,
                   'timing': {'cpu': 0, 'elapsed': 0, 'gc': 0}}],
     'task': 'fef060b0-a9cf-42d0-a696-746545968457'}




.. GENERATED FROM PYTHON SOURCE LINES 126-127

One can also issue a free-form command, e.g.

.. GENERATED FROM PYTHON SOURCE LINES 127-132

.. code-block:: Python


    import asyncio

    pprint(asyncio.run(isabelle.execute_command("echo 42", asynchronous=False)))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [IsabelleResponse(response_type='OK',
                      response_body='{"isabelle_id":"29f2b8ff84f3","isabelle_name":"Isabelle2024"}',
                      response_length=None),
     IsabelleResponse(response_type='OK', response_body='42', response_length=None)]




.. GENERATED FROM PYTHON SOURCE LINES 133-134

Finally, we can shut the server down.

.. GENERATED FROM PYTHON SOURCE LINES 134-136

.. code-block:: Python


    pprint(isabelle.shutdown())




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [IsabelleResponse(response_type='OK',
                      response_body='{"isabelle_id":"29f2b8ff84f3","isabelle_name":"Isabelle2024"}',
                      response_length=None),
     IsabelleResponse(response_type='OK', response_body='', response_length=None)]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 9.814 seconds)


.. _sphx_glr_download_auto_examples_plot_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_example.ipynb <plot_example.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_example.py <plot_example.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_example.zip <plot_example.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
